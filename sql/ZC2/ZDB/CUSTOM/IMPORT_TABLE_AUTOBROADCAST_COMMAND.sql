-- Autobroadcast messages
REPLACE INTO `autobroadcast` VALUES ('1', 'Игрок! А ты не забыл проголосовать за сервер? Помни это повышает онлайн, даёт тебе бонусы, за которые можно купить много вещей!');
REPLACE INTO `autobroadcast` VALUES ('2', 'Во избежании блокировки персонажа, администрация просит вас соблюдать все правила сервера!');
REPLACE INTO `autobroadcast` VALUES ('3', 'Форум сервера - forum.zeone.ru');
REPLACE INTO `autobroadcast` VALUES ('4', 'Сайт сервера - wow.zeone.ru');
REPLACE INTO `autobroadcast` VALUES ('5', 'Личный кабинет - cpanel.zeone.ru');
REPLACE INTO `autobroadcast` VALUES ('6', 'Оружейная - armory.zeone.ru');
REPLACE INTO `autobroadcast` VALUES ('7', 'После каждого обновления не забывайте чистить кеш!');
REPLACE INTO `autobroadcast` VALUES ('8', 'Хотите заработать 25 очков арены? Регистрируйтесь на систему \"случайное поле боя\", за первую победу сегодня вам дадут 25 арена очков и несколько тысяч очков чести!');
REPLACE INTO `autobroadcast` VALUES ('9', 'Хочешь показать себя как ты хорош в бою? Показать свой навык боя в команде? Регистрируйте команды арены и кровавые бои на арене ждут вас! ');
REPLACE INTO `autobroadcast` VALUES ('10', 'Надоело долго качаться? Хочется быстро прокачаться? Активируй систему V.I.P. аккуанта, для того чтобы прокачиватся в 5 раз быстрей. Подробности ищи на форуме, в разделе пожертвований. ');
REPLACE INTO `autobroadcast` VALUES ('11', 'Открыта платная услуга "Дом гильдии", для того чтобы приобрести дом гильдии зайдите на форум, в раздел "Пожертвования".');
REPLACE INTO `autobroadcast` VALUES ('12', 'У нашего сервера есть общий чат для общение с другими игроками, для того чтобы присоединиться к каналу введите /join all.(без точки)!');

-- Command table
REPLACE INTO `command` VALUES ('account create', '3', 'Syntax: .account create $account $password\r\n\r\nCreate account and set password to it.');
REPLACE INTO `command` VALUES ('account delete', '3', 'Syntax: .account delete $account\r\n\r\nDelete account with all characters.');
REPLACE INTO `command` VALUES ('account lock', '0', 'Syntax: .account lock [on|off]\r\n\r\nAllow login from account only from current used IP or remove this requirement.');
REPLACE INTO `command` VALUES ('account onlinelist', '4', 'Syntax: .account onlinelist\r\n\r\nShow list of online accounts.');
REPLACE INTO `command` VALUES ('account password', '0', 'Syntax: .account password $old_password $new_password $new_password\r\n\r\nChange your account password.');
REPLACE INTO `command` VALUES ('account set addon', '3', 'Syntax: .account set addon [$account] #addon\r\n\r\nSet user (possible targeted) expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk.');
REPLACE INTO `command` VALUES ('account set gmlevel', '4', 'Syntax: .account set gmlevel [$account] #level [#realmid]\r\n\r\nSet the security level for targeted player (can\'t be used at self) or for account $name to a level of #level on the realm #realmID.\r\n\r\n#level may range from 0 to 3.\r\n\r\n#reamID may be -1 for all realms.');
REPLACE INTO `command` VALUES ('account set password', '4', 'Syntax: .account set password $account $password $password\r\n\r\nSet password for account.');
REPLACE INTO `command` VALUES ('account set', '3', 'Syntax: .account set $subcommand\nType .account set to see the list of possible subcommands or .help account set $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('account', '0', 'Syntax: .account\r\n\r\nDisplay the access level of your account.');
REPLACE INTO `command` VALUES ('additem', '4', 'Syntax: .additem #itemid/[#itemname]/#shift-click-item-link #itemcount\r\n\r\nAdds the specified number of items of id #itemid (or exact (!) name $itemname in brackets, or link created by shift-click at item in inventory or recipe) to your or selected character inventory. If #itemcount is omitted, only one item will be added.\r\n.');
REPLACE INTO `command` VALUES ('additemset', '3', 'Syntax: .additemset #itemsetid\r\n\r\nAdd items from itemset of id #itemsetid to your or selected character inventory. Will add by one example each item from itemset.');
REPLACE INTO `command` VALUES ('announce', '2', 'Syntax: .announce $MessageToBroadcast\r\n\r\nSend a global message to all players online in chat log.');
REPLACE INTO `command` VALUES ('aura', '3', 'Syntax: .aura #spellid\r\n\r\nAdd the aura from spell #spellid to the selected Unit.');
REPLACE INTO `command` VALUES ('ban account', '1', 'Syntax: .ban account $Name $bantime $reason\r\nBan account kick player.\r\n$bantime: negative value leads to permban, otherwise use a timestring like \"4d20h3s\".');
REPLACE INTO `command` VALUES ('ban character', '1', 'Syntax: .ban character $Name $bantime $reason\r\nBan account and kick player.\r\n$bantime: negative value leads to permban, otherwise use a timestring like \"4d20h3s\".');
REPLACE INTO `command` VALUES ('ban ip', '1', 'Syntax: .ban ip $Ip $bantime $reason\r\nBan IP.\r\n$bantime: negative value leads to permban, otherwise use a timestring like \"4d20h3s\".');
REPLACE INTO `command` VALUES ('ban', '1', 'Syntax: .ban $subcommand\nType .ban to see the list of possible subcommands or .help ban $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('baninfo account', '3', 'Syntax: .baninfo account $accountid\r\nWatch full information about a specific ban.');
REPLACE INTO `command` VALUES ('baninfo character', '3', 'Syntax: .baninfo character $charactername \r\nWatch full information about a specific ban.');
REPLACE INTO `command` VALUES ('baninfo ip', '3', 'Syntax: .baninfo ip $ip\r\nWatch full information about a specific ban.');
REPLACE INTO `command` VALUES ('baninfo', '3', 'Syntax: .baninfo $subcommand\nType .baninfo to see the list of possible subcommands or .help baninfo $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('bank', '3', 'Syntax: .bank\r\n\r\nShow your bank inventory.');
REPLACE INTO `command` VALUES ('banlist account', '3', 'Syntax: .banlist account [$Name]\r\nSearches the banlist for a account name pattern or show full list account bans.');
REPLACE INTO `command` VALUES ('banlist character', '3', 'Syntax: .banlist character $Name\r\nSearches the banlist for a character name pattern. Pattern required.');
REPLACE INTO `command` VALUES ('banlist ip', '3', 'Syntax: .banlist ip [$Ip]\r\nSearches the banlist for a IP pattern or show full list of IP bans.');
REPLACE INTO `command` VALUES ('banlist', '3', 'Syntax: .banlist $subcommand\nType .banlist to see the list of possible subcommands or .help banlist $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('bindsight', '3', 'Syntax: .bindsight\r\n\r\nBinds vision to the selected unit indefinitely. Cannot be used while currently possessing a target.');
REPLACE INTO `command` VALUES ('cast back', '3', 'Syntax: .cast back #spellid [triggered]\r\n  Selected target will cast #spellid to your character. If \'trigered\' or part provided then spell casted with triggered flag.');
REPLACE INTO `command` VALUES ('cast dist', '3', 'Syntax: .cast dist #spellid [#dist [triggered]]\r\n  You will cast spell to pint at distance #dist. If \'trigered\' or part provided then spell casted with triggered flag. Not all spells can be casted as area spells.');
REPLACE INTO `command` VALUES ('cast self', '3', 'Syntax: .cast self #spellid [triggered]\r\nCast #spellid by target at target itself. If \'trigered\' or part provided then spell casted with triggered flag.');
REPLACE INTO `command` VALUES ('cast target', '3', 'Syntax: .cast target #spellid [triggered]\r\n  Selected target will cast #spellid to his victim. If \'trigered\' or part provided then spell casted with triggered flag.');
REPLACE INTO `command` VALUES ('cast', '3', 'Syntax: .cast #spellid [triggered]\r\n  Cast #spellid to selected target. If no target selected cast to self. If \'trigered\' or part provided then spell casted with triggered flag.');
REPLACE INTO `command` VALUES ('character customize', '2', 'Syntax: .character customize [$name]\r\n\r\nMark selected in game or by $name in command character for customize at next login.');
REPLACE INTO `command` VALUES ('character delete', '4', 'Syntax: .character delete $name\r\n\r\nDelete character $name.');
REPLACE INTO `command` VALUES ('character level', '3', 'Syntax: .character level [$playername] [#level]\r\n\r\nSet the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted, the level will be increase by 1. If #numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.');
REPLACE INTO `command` VALUES ('character rename', '2', 'Syntax: .character rename [$name]\r\n\r\nMark selected in game or by $name in command character for rename at next login.');
REPLACE INTO `command` VALUES ('character reputation', '2', 'Syntax: .character reputation [$player_name]\r\n\r\nShow reputation information for selected player or player find by $player_name.');
REPLACE INTO `command` VALUES ('combatstop', '2', 'Syntax: .combatstop [$playername]\r\nStop combat for selected character. If selected non-player then command applied to self. If $playername provided then attempt applied to online player $playername.');
REPLACE INTO `command` VALUES ('cometome', '3', 'SYntax: .cometome $parameter\nMake selected creature come to your current location (new position not saved to DB).');
REPLACE INTO `command` VALUES ('commands', '0', 'Syntax: .commands\r\n\r\nDisplay a list of available commands for your account level.');
REPLACE INTO `command` VALUES ('cooldown', '3', 'Syntax: .cooldown [#spell_id]\r\n\r\nRemove all (if spell_id not provided) or #spel_id spell cooldown from selected character or you (if no selection).');
REPLACE INTO `command` VALUES ('damage', '3', 'Syntax: .damage $damage_amount [$school [$spellid]]\r\n\r\nApply $damage to target. If not $school and $spellid provided then this flat clean melee damage without any modifiers. If $school provided then damage modified by armor reduction (if school physical), and target absorbing modifiers and result applied as melee damage to target. If spell provided then damage modified and applied as spell damage. $spellid can be shift-link.');
REPLACE INTO `command` VALUES ('debug arena', '3', 'Syntax: .debug arena\r\n\r\nToggle debug mode for arenas. In debug mode GM can start arena with single player.');
REPLACE INTO `command` VALUES ('debug bg', '3', 'Syntax: .debug bg\r\n\r\nToggle debug mode for battlegrounds. In debug mode GM can start battleground with single player.');
REPLACE INTO `command` VALUES ('debug Mod32Value', '3', 'Syntax: .debug Mod32Value #field #value\r\n\r\nAdd #value to field #field of your character.');
REPLACE INTO `command` VALUES ('debug play cinematic', '2', 'Syntax: .debug play cinematic #cinematicid\r\n\r\nPlay cinematic #cinematicid for you. You stay at place while your mind fly.\r\n');
REPLACE INTO `command` VALUES ('debug play movie', '2', 'Syntax: .debug play movie #movieid\r\n\r\nPlay movie #movieid for you.');
REPLACE INTO `command` VALUES ('debug play sound', '2', 'Syntax: .debug play sound #soundid\r\n\r\nPlay sound with #soundid.\r\nSound will be play only for you. Other players do not hear this.\r\nWarning: client may have more 5000 sounds...');
REPLACE INTO `command` VALUES ('debug', '2', 'Syntax: .debug $subcommand\nType .debug to see the list of possible subcommands or .help debug $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('demorph', '2', 'Syntax: .demorph\r\n\r\nDemorph the selected player.');
REPLACE INTO `command` VALUES ('die', '3', 'Syntax: .die\r\n\r\nKill the selected player. If no player is selected, it will kill you.');
REPLACE INTO `command` VALUES ('dismount', '0', 'Syntax: .dismount\r\n\r\nDismount you, if you are mounted.');
REPLACE INTO `command` VALUES ('distance', '3', 'Syntax: .distance\r\n\r\nDisplay the distance from your character to the selected creature.');
REPLACE INTO `command` VALUES ('event activelist', '2', 'Syntax: .event activelist\r\nShow list of currently active events.');
REPLACE INTO `command` VALUES ('event start', '2', 'Syntax: .event start #event_id\r\nStart event #event_id. Set start time for event to current moment (change not saved in DB).');
REPLACE INTO `command` VALUES ('event stop', '2', 'Syntax: .event stop #event_id\r\nStop event #event_id. Set start time for event to time in past that make current moment is event stop time (change not saved in DB).');
REPLACE INTO `command` VALUES ('event', '2', 'Syntax: .event #event_id\r\nShow details about event with #event_id.');
REPLACE INTO `command` VALUES ('explorecheat', '3', 'Syntax: .explorecheat #flag\r\n\r\nReveal  or hide all maps for the selected player. If no player is selected, hide or reveal maps to you.\r\n\r\nUse a #flag of value 1 to reveal, use a #flag value of 0 to hide all maps.');
REPLACE INTO `command` VALUES ('flusharenapoints', '3', 'Syntax: .flusharenapoints\r\n\r\nUse it to distribute arena points based on arena team ratings, and start a new week.');
REPLACE INTO `command` VALUES ('freeze', '2', 'Syntax: .freeze (#player)\r\n\"Freezes\" #player and disables his chat. When using this without #name it will freeze your target.');
REPLACE INTO `command` VALUES ('gm chat', '2', 'Syntax: .gm chat [on/off]\r\n\r\nEnable or disable chat GM MODE (show gm badge in messages) or show current state of on/off not provided.');
REPLACE INTO `command` VALUES ('gm fly', '2', 'Syntax: .gm fly [on/off]\r\nEnable/disable gm fly mode.');
REPLACE INTO `command` VALUES ('gm ingame', '0', 'Syntax: .gm ingame\r\n\r\nDisplay a list of available in game Game Masters.');
REPLACE INTO `command` VALUES ('gm list', '3', 'Syntax: .gm list\r\n\r\nDisplay a list of all Game Masters accounts and security levels.');
REPLACE INTO `command` VALUES ('gm visible', '2', 'Syntax: .gm visible on/off\r\n\r\nOutput current visibility state or make GM visible(on) and invisible(off) for other players.');
REPLACE INTO `command` VALUES ('gm', '2', 'Syntax: .gm [on/off]\r\n\r\nEnable or Disable in game GM MODE or show current state of on/off not provided.');
REPLACE INTO `command` VALUES ('gmannounce', '2', 'Syntax: .gmannounce $announcement\r\nSend an announcement to online Gamemasters.');
REPLACE INTO `command` VALUES ('gmnameannounce', '2', 'Syntax: .gmnameannounce $announcement.\r\nSend an announcement to all online GM\'s, displaying the name of the sender.');
REPLACE INTO `command` VALUES ('gmnotify', '2', 'Syntax: .gmnotify $notification\r\nDisplays a notification on the screen of all online GM\'s.');
REPLACE INTO `command` VALUES ('go creature', '2', 'Syntax: .go creature #creature_guid\r\nTeleport your character to creature with guid #creature_guid.\r\n.gocreature #creature_name\r\nTeleport your character to creature with this name.\r\n.gocreature id #creature_id\r\nTeleport your character to a creature that was spawned from the template with this entry.\r\n*If* more than one creature is found, then you are teleported to the first that is found inside the database.');
REPLACE INTO `command` VALUES ('go graveyard', '2', 'Syntax: .go graveyard #graveyardId\r\n Teleport to graveyard with the graveyardId specified.');
REPLACE INTO `command` VALUES ('go grid', '2', 'Syntax: .go grid #gridX #gridY [#mapId]\r\n\r\nTeleport the gm to center of grid with provided indexes at map #mapId (or current map if it not provided).');
REPLACE INTO `command` VALUES ('go object', '2', 'Syntax: .go object #object_guid\r\nTeleport your character to gameobject with guid #object_guid');
REPLACE INTO `command` VALUES ('go taxinode', '2', 'Syntax: .go taxinode #taxinode\r\n\r\nTeleport player to taxinode coordinates. You can look up zone using .lookup taxinode $namepart');
REPLACE INTO `command` VALUES ('go ticket', '2', 'Syntax: .go ticket #ticketid\r\nTeleports the user to the location where $ticketid was created.');
REPLACE INTO `command` VALUES ('go trigger', '2', 'Syntax: .go trigger #trigger_id\r\n\r\nTeleport your character to areatrigger with id #trigger_id. Character will be teleported to trigger target if selected areatrigger is telporting trigger.');
REPLACE INTO `command` VALUES ('go xy', '2', 'Syntax: .go xy #x #y [#mapid]\r\n\r\nTeleport player to point with (#x,#y) coordinates at ground(water) level at map #mapid or same map if #mapid not provided.');
REPLACE INTO `command` VALUES ('go xyz', '2', 'Syntax: .go xyz #x #y #z [#mapid]\r\n\r\nTeleport player to point with (#x,#y,#z) coordinates at ground(water) level at map #mapid or same map if #mapid not provided.');
REPLACE INTO `command` VALUES ('go zonexy', '2', 'Syntax: .go zonexy #x #y [#zone]\r\n\r\nTeleport player to point with (#x,#y) client coordinates at ground(water) level in zone #zoneid or current zone if #zoneid not provided. You can look up zone using .lookup area $namepart');
REPLACE INTO `command` VALUES ('go', '2', 'Syntax: .go $subcommand\nType .go to see the list of possible subcommands or .help go $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('gobject activate', '2', 'Syntax: .gobject activate #guid\r\n\r\nActivates an object like a door or a button.');
REPLACE INTO `command` VALUES ('gobject add', '2', 'Syntax: .gobject add #id <spawntimeSecs>\r\n\r\nAdd a game object from game object templates to the world at your current location using the #id.\r\nspawntimesecs sets the spawntime, it is optional.\r\n\r\nNote: this is a copy of .gameobject.');
REPLACE INTO `command` VALUES ('gobject delete', '2', 'Syntax: .gobject delete #go_guid\r\nDelete gameobject with guid #go_guid.');
REPLACE INTO `command` VALUES ('gobject move', '2', 'Syntax: .gobject move #goguid [#x #y #z]\r\n\r\nMove gameobject #goguid to character coordinates (or to (#x,#y,#z) coordinates if its provide).');
REPLACE INTO `command` VALUES ('gobject near', '2', 'Syntax: .gobject near  [#distance]\r\n\r\nOutput gameobjects at distance #distance from player. Output gameobject guids and coordinates sorted by distance from character. If #distance not provided use 10 as default value.');
REPLACE INTO `command` VALUES ('gobject setphase', '2', 'Syntax: .gobject setphase #guid #phasemask\r\n\r\nGameobject with DB guid #guid phasemask changed to #phasemask with related world vision update for players. Gameobject state saved to DB and persistent.');
REPLACE INTO `command` VALUES ('gobject target', '2', 'Syntax: .gobject target [#go_id|#go_name_part]\r\n\r\nLocate and show position nearest gameobject. If #go_id or #go_name_part provide then locate and show position of nearest gameobject with gameobject template id #go_id or name included #go_name_part as part.');
REPLACE INTO `command` VALUES ('gobject tempadd', '2', 'Adds a temporary gameobject that is not saved to DB.');
REPLACE INTO `command` VALUES ('gobject turn', '2', 'Syntax: .gobject turn #goguid \r\n\r\nSet for gameobject #goguid orientation same as current character orientation.');
REPLACE INTO `command` VALUES ('gobject', '2', 'Syntax: .gobject $subcommand\nType .gobject to see the list of possible subcommands or .help gobject $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('goname', '2', 'Syntax: .goname [$charactername]\r\n\r\nTeleport to the given character. Either specify the character name or click on the character\'s portrait, e.g. when you are in a group. Character can be offline.');
REPLACE INTO `command` VALUES ('gps', '2', 'Syntax: .gps [$name|$shift-link]\r\n\r\nDisplay the position information for a selected character or creature (also if player name $name provided then for named player, or if creature/gameobject shift-link provided then pointed creature/gameobject if it loaded). Position information includes X, Y, Z, and orientation, map Id and zone Id');
REPLACE INTO `command` VALUES ('groupgo', '2', 'Syntax: .groupgo [$charactername]\r\n\r\nTeleport the given character and his group to you. Teleported only online characters but original selected group member can be offline.');
REPLACE INTO `command` VALUES ('guid', '2', 'Syntax: .guid\r\n\r\nDisplay the GUID for the selected character.');
REPLACE INTO `command` VALUES ('guild create', '2', 'Syntax: .guild create [$GuildLeaderName] \"$GuildName\"\r\n\r\nCreate a guild named $GuildName with the player $GuildLeaderName (or selected) as leader.  Guild name must in quotes.');
REPLACE INTO `command` VALUES ('guild delete', '2', 'Syntax: .guild delete \"$GuildName\"\r\n\r\nDelete guild $GuildName. Guild name must in quotes.');
REPLACE INTO `command` VALUES ('guild invite', '2', 'Syntax: .guild invite [$CharacterName] \"$GuildName\"\r\n\r\nAdd player $CharacterName (or selected) into a guild $GuildName. Guild name must in quotes.');
REPLACE INTO `command` VALUES ('guild rank', '2', 'Syntax: .guild rank [$CharacterName] #Rank\r\n\r\nSet for player $CharacterName (or selected) rank #Rank in a guild.');
REPLACE INTO `command` VALUES ('guild uninvite', '2', 'Syntax: .guild uninvite [$CharacterName]\r\n\r\nRemove player $CharacterName (or selected) from a guild.');
REPLACE INTO `command` VALUES ('wg', '3', 'Syntax: .wg $subcommand.');
REPLACE INTO `command` VALUES ('wg enable', '3', 'Syntax: .wg enable [on/off] Enable/Disable Wintergrasp outdoorPvP.');
REPLACE INTO `command` VALUES ('wg start', '3', 'Syntax: .wg start\r\nForce Wintergrasp battle start.');
REPLACE INTO `command` VALUES ('wg status', '3', 'Syntax: .wg status\r\nWintergrasp info, defender, timer, wartime.');
REPLACE INTO `command` VALUES ('wg stop', '3', 'Syntax: .wg stop\r\nForce Wintergrasp battle stop (No rewards).');
REPLACE INTO `command` VALUES ('wg switch', '3', 'Syntax: .wg switch\r\nSwitchs Wintergrasp defender team.');
REPLACE INTO `command` VALUES ('wg timer', '3', 'Syntax: .wg timer $minutes\r\nChange the current timer. Min value = 1, Max value 60 (Wartime), 1440 (Not Wartime)');
REPLACE INTO `command` VALUES ('guild', '3', 'Syntax: .guild $subcommand\nType .guild to see the list of possible subcommands or .help guild $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('help', '0', 'Syntax: .help [$command]\r\n\r\nDisplay usage instructions for the given $command. If no $command provided show list available commands.');
REPLACE INTO `command` VALUES ('hidearea', '3', 'Syntax: .hidearea #areaid\r\n\r\nHide the area of #areaid to the selected character. If no character is selected, hide this area to you.');
REPLACE INTO `command` VALUES ('honor add', '2', 'Syntax: .honor add $amount\r\n\r\nAdd a certain amount of honor (gained today) to the selected player.');
REPLACE INTO `command` VALUES ('honor addkill', '2', 'Syntax: .honor addkikll\r\n\r\nAdd the targeted unit as one of your pvp kills today (you only get honor if it\'s a racial leader or a player)');
REPLACE INTO `command` VALUES ('honor update', '2', 'Syntax: .honor update\r\n\r\nForce the yesterday\'s honor fields to be updated with today\'s data, which will get reset for the selected player.');
REPLACE INTO `command` VALUES ('honor', '2', 'Syntax: .honor $subcommand\nType .honor to see the list of possible subcommands or .help honor $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('hover', '3', 'Syntax: .hover #flag\r\n\r\nEnable or disable hover mode for your character.\r\n\r\nUse a #flag of value 1 to enable, use a #flag value of 0 to disable hover.');
REPLACE INTO `command` VALUES ('instance listbinds', '3', 'Syntax: .instance listbinds\r\n  Lists the binds of the selected player.');
REPLACE INTO `command` VALUES ('instance savedata', '3', 'Syntax: .instance savedata\r\n  Save the InstanceData for the current player\'s map to the DB.');
REPLACE INTO `command` VALUES ('instance stats', '3', 'Syntax: .instance stats\r\n  Shows statistics about instances.');
REPLACE INTO `command` VALUES ('instance unbind', '3', 'Syntax: .instance unbind all\r\n  All of the selected player\'s binds will be cleared.');
REPLACE INTO `command` VALUES ('instance', '3', 'Syntax: .instance $subcommand\nType .instance to see the list of possible subcommands or .help instance $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('itemmove', '2', 'Syntax: .itemmove #sourceslotid #destinationslotid\r\n\r\nMove an item from slots #sourceslotid to #destinationslotid in your inventory\r\n\r\nNot yet implemented');
REPLACE INTO `command` VALUES ('kick', '1', 'Syntax: .kick [$charactername] [$reason]\r\n\r\nKick the given character name from the world with or without reason. If no character name is provided then the selected player (except for yourself) will be kicked. If no reason is provided, default is \"No Reason\".');
REPLACE INTO `command` VALUES ('learn all', '3', 'Syntax: .learn all\r\n\r\nLearn all big set different spell maybe useful for Administaror.');
REPLACE INTO `command` VALUES ('learn all_crafts', '2', 'Syntax: .learn crafts\r\n\r\nLearn all professions and recipes.');
REPLACE INTO `command` VALUES ('learn all_default', '2', 'Syntax: .learn all_default [$playername]\r\n\r\nLearn for selected/$playername player all default spells for his race/class and spells rewarded by completed quests.');
REPLACE INTO `command` VALUES ('learn all_gm', '2', 'Syntax: .learn all_gm\r\n\r\nLearn all default spells for Game Masters.');
REPLACE INTO `command` VALUES ('learn all_lang', '2', 'Syntax: .learn all_lang\r\n\r\nLearn all languages');
REPLACE INTO `command` VALUES ('learn all_myclass', '3', 'Syntax: .learn all_myclass\r\n\r\nLearn all spells and talents available for his class.');
REPLACE INTO `command` VALUES ('learn all_mypettalents', '3', 'Syntax: .learn all_mypettalents\r\n\r\nLearn all talents for your pet available for his creature type (only for hunter pets).');
REPLACE INTO `command` VALUES ('learn all_myspells', '3', 'Syntax: .learn all_myspells\r\n\r\nLearn all spells (except talents and spells with first rank learned as talent) available for his class.');
REPLACE INTO `command` VALUES ('learn all_mytalents', '3', 'Syntax: .learn all_mytalents\r\n\r\nLearn all talents (and spells with first rank learned as talent) available for his class.');
REPLACE INTO `command` VALUES ('learn all_recipes', '2', 'Syntax: .learn all_recipes [$profession]\r\rLearns all recipes of specified profession and sets skill level to max.\rExample: .learn all_recipes enchanting');
REPLACE INTO `command` VALUES ('learn', '3', 'Syntax: .learn #spell [all]\r\n\r\nSelected character learn a spell of id #spell. If \'all\' provided then all ranks learned.');
REPLACE INTO `command` VALUES ('levelup', '3', 'Syntax: .levelup [$playername] [#numberoflevels]\r\n\r\nIncrease/decrease the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted, the level will be increase by 1. If #numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.');
REPLACE INTO `command` VALUES ('linkgrave', '3', 'Syntax: .linkgrave #graveyard_id [alliance|horde]\r\n\r\nLink current zone to graveyard for any (or alliance/horde faction ghosts). This let character ghost from zone teleport to graveyard after die if graveyard is nearest from linked to zone and accept ghost of this faction. Add only single graveyard at another map and only if no graveyards linked (or planned linked at same map).');
REPLACE INTO `command` VALUES ('list auras', '3', 'Syntax: .list auras\nList auras (passive and active) of selected creature or player. If no creature or player is selected, list your own auras.');
REPLACE INTO `command` VALUES ('list creature', '3', 'Syntax: .list creature #creature_id [#max_count]\r\n\r\nOutput creatures with creature id #creature_id found in world. Output creature guids and coordinates sorted by distance from character. Will be output maximum #max_count creatures. If #max_count not provided use 10 as default value.');
REPLACE INTO `command` VALUES ('list item', '3', 'Syntax: .list item #item_id [#max_count]\r\n\r\nOutput items with item id #item_id found in all character inventories, mails, auctions, and guild banks. Output item guids, item owner guid, owner account and owner name (guild name and guid in case guild bank). Will be output maximum #max_count items. If #max_count not provided use 10 as default value.');
REPLACE INTO `command` VALUES ('list object', '3', 'Syntax: .list object #gameobject_id [#max_count]\r\n\r\nOutput gameobjects with gameobject id #gameobject_id found in world. Output gameobject guids and coordinates sorted by distance from character. Will be output maximum #max_count gameobject. If #max_count not provided use 10 as default value.');
REPLACE INTO `command` VALUES ('list', '3', 'Syntax: .list $subcommand\nType .list to see the list of possible subcommands or .help list $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('listfreeze', '2', 'Syntax: .listfreeze\r\n\r\nSearch and output all frozen players.');
REPLACE INTO `command` VALUES ('loadpath', '3', 'Syntax: .loadpath $pathid\nLoad path changes ingame - IMPORTANT: must be applied first for new paths before .path load #pathid ');
REPLACE INTO `command` VALUES ('reload spell_group', '3', 'Syntax: .reload spell_group\nReload spell_group table.');
REPLACE INTO `command` VALUES ('channel set public', '3', 'Syntax: .channel set public  $channel $public\r\n\r\nChange password-changing ability for a channel. 1 for possible, 0 for GM only.');
REPLACE INTO `command` VALUES ('lookup area', '2', 'Syntax: .lookup area $namepart\r\n\r\nLooks up an area by $namepart, and returns all matches with their area ID\'s.');
REPLACE INTO `command` VALUES ('lookup creature', '3', 'Syntax: .lookup creature $namepart\r\n\r\nLooks up a creature by $namepart, and returns all matches with their creature ID\'s.');
REPLACE INTO `command` VALUES ('lookup event', '2', 'Syntax: .lookup event $name\r\nAttempts to find the ID of the event with the provided $name.');
REPLACE INTO `command` VALUES ('lookup faction', '3', 'Syntax: .lookup faction $name\r\nAttempts to find the ID of the faction with the provided $name.');
REPLACE INTO `command` VALUES ('lookup item', '3', 'Syntax: .lookup item $itemname\r\n\r\nLooks up an item by $itemname, and returns all matches with their Item ID\'s.');
REPLACE INTO `command` VALUES ('lookup itemset', '3', 'Syntax: .lookup itemset $itemname\r\n\r\nLooks up an item set by $itemname, and returns all matches with their Item set ID\'s.');
REPLACE INTO `command` VALUES ('lookup map', '3', 'Syntax: .lookup map $namepart\r\n\r\nLooks up a map by $namepart, and returns all matches with their map ID\'s.');
REPLACE INTO `command` VALUES ('lookup object', '3', 'Syntax: .lookup object $objname\r\n\r\nLooks up an gameobject by $objname, and returns all matches with their Gameobject ID\'s.');
REPLACE INTO `command` VALUES ('lookup player account', '2', 'Syntax: .lookup player account $account ($limit) \r\n\r\n Searchs players, which account username is $account with optional parametr $limit of results.');
REPLACE INTO `command` VALUES ('lookup player email', '2', 'Syntax: .lookup player email $email ($limit) \r\n\r\n Searchs players, which account email is $email with optional parametr $limit of results.');
REPLACE INTO `command` VALUES ('lookup player ip', '2', 'Syntax: .lookup player ip $ip ($limit) \r\n\r\n Searchs players, which account ast_ip is $ip with optional parametr $limit of results.');
REPLACE INTO `command` VALUES ('lookup quest', '3', 'Syntax: .lookup quest $namepart\r\n\r\nLooks up a quest by $namepart, and returns all matches with their quest ID\'s.');
REPLACE INTO `command` VALUES ('lookup skill', '3', 'Syntax: .lookup skill $$namepart\r\n\r\nLooks up a skill by $namepart, and returns all matches with their skill ID\'s.');
REPLACE INTO `command` VALUES ('lookup spell', '3', 'Syntax: .lookup spell $namepart\r\n\r\nLooks up a spell by $namepart, and returns all matches with their spell ID\'s.');
REPLACE INTO `command` VALUES ('lookup taxinode', '3', 'Syntax: .lookup taxinode $substring\r\n\r\nSearch and output all taxinodes with provide $substring in name.');
REPLACE INTO `command` VALUES ('lookup tele', '2', 'Syntax: .lookup tele $substring\r\n\r\nSearch and output all .tele command locations with provide $substring in name.');
REPLACE INTO `command` VALUES ('lookup', '3', 'Syntax: .lookup $subcommand\nType .lookup to see the list of possible subcommands or .help lookup $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('maxskill', '3', 'Syntax: .maxskill\r\nSets all skills of the targeted player to their maximum values for its current level.');
REPLACE INTO `command` VALUES ('modify arena', '2', 'Syntax: .modify arena #value\r\nAdd $amount arena points to the selected player.');
REPLACE INTO `command` VALUES ('modify aspeed', '2', 'Syntax: .modify aspeed #rate\r\n\r\nModify all speeds -run,swim,run back,swim back- of the selected player to \"normalbase speed for this move type\"*rate. If no player is selected, modify your speed.\r\n\r\n #rate may range from 0.1 to 50.');
REPLACE INTO `command` VALUES ('modify bit', '2', 'Syntax: .modify bit #field #bit\r\n\r\nToggle the #bit bit of the #field field for the selected player. If no player is selected, modify your character.');
REPLACE INTO `command` VALUES ('modify bwalk', '2', 'Syntax: .modify bwalk #rate\r\n\r\nModify the speed of the selected player while running backwards to \"normal walk back speed\"*rate. If no player is selected, modify your speed.\r\n\r\n #rate may range from 0.1 to 50.');
REPLACE INTO `command` VALUES ('modify drunk', '2', 'Syntax: .modify drunk #value\r\n Set drunk level to #value (0..100). Value 0 remove drunk state, 100 is max drunked state.');
REPLACE INTO `command` VALUES ('modify energy', '2', 'Syntax: .modify energy #energy\r\n\r\nModify the energy of the selected player. If no player is selected, modify your energy.');
REPLACE INTO `command` VALUES ('modify faction', '2', 'Syntax: .modify faction #factionid #flagid #npcflagid #dynamicflagid\r\n\r\nModify the faction and flags of the selected creature. Without arguments, display the faction and flags of the selected creature.');
REPLACE INTO `command` VALUES ('modify fly', '2', '.modify fly $parameter\nModify the flying speed of the selected player to \"normal flying speed\"*rate. If no player is selected, modify your speed.\n #rate may range from 0.1 to 50.');
REPLACE INTO `command` VALUES ('modify gender', '2', 'Syntax: .modify gender male/female\r\n\r\nChange gender of selected player.');
REPLACE INTO `command` VALUES ('modify honor', '2', 'Syntax: .modify honor $amount\r\n\r\nAdd $amount honor points to the selected player.');
REPLACE INTO `command` VALUES ('modify hp', '2', 'Syntax: .modify hp #newhp\r\n\r\nModify the hp of the selected player. If no player is selected, modify your hp.');
REPLACE INTO `command` VALUES ('modify mana', '2', 'Syntax: .modify mana #newmana\r\n\r\nModify the mana of the selected player. If no player is selected, modify your mana.');
REPLACE INTO `command` VALUES ('modify money', '2', 'Syntax: .modify money #money\r\n.money #money\r\n\r\nAdd or remove money to the selected player. If no player is selected, modify your money.\r\n\r\n #gold can be negative to remove money.');
REPLACE INTO `command` VALUES ('modify morph', '2', 'Syntax: .modify morph #displayid\r\n\r\nChange your current model id to #displayid.');
REPLACE INTO `command` VALUES ('modify mount', '2', 'Syntax: .modify mount #id #speed\r\nDisplay selected player as mounted at #id creature and set speed to #speed value.');
REPLACE INTO `command` VALUES ('modify phase', '3', 'Syntax: .modify phase #phasemask\r\n\r\nSelected character phasemask changed to #phasemask with related world vision update. Change active until in game phase changed, or GM-mode enable/disable, or re-login. Character pts pasemask update to same value.');
REPLACE INTO `command` VALUES ('modify rage', '2', 'Syntax: .modify rage #newrage\r\n\r\nModify the rage of the selected player. If no player is selected, modify your rage.');
REPLACE INTO `command` VALUES ('modify rep', '2', 'Syntax: .modify rep #repId (#repvalue | $rankname [#delta])\r\nSets the selected players reputation with faction #repId to #repvalue or to $reprank.\r\nIf the reputation rank name is provided, the resulting reputation will be the lowest reputation for that rank plus the delta amount, if specified.\r\nYou can use \'.pinfo rep\' to list all known reputation ids, or use \'.lookup faction $name\' to locate a specific faction id.');
REPLACE INTO `command` VALUES ('modify runicpower', '2', 'Syntax: .modify runicpower #newrunicpower\r\n\r\nModify the runic power of the selected player. If no player is selected, modify your runic power.');
REPLACE INTO `command` VALUES ('modify scale', '2', '.modify scale $parameter\nModify size of the selected player to \"normal scale\"*rate. If no player is selected, modify your size.\n#rate may range from 0.1 to 10.');
REPLACE INTO `command` VALUES ('modify speed', '2', 'Syntax: .modify speed #rate\r\n.speed #rate\r\n\r\nModify the running speed of the selected player to \"normal base run speed\"*rate. If no player is selected, modify your speed.\r\n\r\n #rate may range from 0.1 to 50.');
REPLACE INTO `command` VALUES ('modify spell', '2', 'TODO');
REPLACE INTO `command` VALUES ('modify standstate', '2', 'Syntax: .modify standstate #emoteid\r\n\r\nChange the emote of your character while standing to #emoteid.');
REPLACE INTO `command` VALUES ('modify swim', '2', 'Syntax: .modify swim #rate\r\n\r\nModify the swim speed of the selected player to \"normal swim speed\"*rate. If no player is selected, modify your speed.\r\n\r\n #rate may range from 0.1 to 50.');
REPLACE INTO `command` VALUES ('character titles', '2', 'Syntax: .character titles [$player_name]\r\n\r\nShow known titles list for selected player or player find by $player_name.');
REPLACE INTO `command` VALUES ('modify tp', '2', 'Syntax: .modify tp #amount\r\n\r\nSet free talent pointes for selected character or character\'s pet. It will be reset to default expected at next levelup/login/quest reward.');
REPLACE INTO `command` VALUES ('modify', '2', 'Syntax: .modify $subcommand\nType .modify to see the list of possible subcommands or .help modify $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('movegens', '3', 'Syntax: .movegens\r\n  Show movement generators stack for selected creature or player.');
REPLACE INTO `command` VALUES ('mute', '1', 'Syntax: .mute [$playerName] $timeInMinutes [$reason]\r\n\r\nDisible chat messaging for any character from account of character $playerName (or currently selected) at $timeInMinutes minutes. Player can be offline.');
REPLACE INTO `command` VALUES ('nameannounce', '1', 'Syntax: .nameannounce $announcement.\nSend an announcement to all online players, displaying the name of the sender.');
REPLACE INTO `command` VALUES ('namego', '2', 'Syntax: .namego [$charactername]\r\n\r\nTeleport the given character to you. Character can be offline.');
REPLACE INTO `command` VALUES ('neargrave', '3', 'Syntax: .neargrave [alliance|horde]\r\n\r\nFind nearest graveyard linked to zone (or only nearest from accepts alliance or horde faction ghosts).');
REPLACE INTO `command` VALUES ('notify', '2', 'Syntax: .notify $MessageToBroadcast\r\n\r\nSend a global message to all players online in screen.');
REPLACE INTO `command` VALUES ('npc add', '2', 'Syntax: .npc add #creatureid\r\n\r\nSpawn a creature by the given template id of #creatureid.');
REPLACE INTO `command` VALUES ('npc addformation', '2', 'Syntax: .npc addformation $leader\nAdd selected creature to a leader\'s formation.');
REPLACE INTO `command` VALUES ('npc additem', '2', 'Syntax: .npc additem #itemId <#maxcount><#incrtime><#extendedcost>r\r\n\r\nAdd item #itemid to item list of selected vendor. Also optionally set max count item in vendor item list and time to item count restoring and items ExtendedCost.');
REPLACE INTO `command` VALUES ('npc addmove', '2', 'Syntax: .npc addmove #creature_guid [#waittime]\r\n\r\nAdd your current location as a waypoint for creature with guid #creature_guid. And optional add wait time.');
REPLACE INTO `command` VALUES ('npc allowmove', '3', 'Syntax: .npc allowmove\r\n\r\nEnable or disable movement creatures in world. Not implemented.');
REPLACE INTO `command` VALUES ('npc changeentry', '3', 'Syntax: .npc changeentry $entry\nSwitch selected creature with another entry from creature_template. - New creature.id value not saved to DB.');
REPLACE INTO `command` VALUES ('npc changelevel', '2', 'Syntax: .npc changelevel #level\r\n\r\nChange the level of the selected creature to #level.\r\n\r\n#level may range from 1 to 63.');
REPLACE INTO `command` VALUES ('npc delete', '2', 'Syntax: .npc delete [#guid]\r\n\r\nDelete creature with guid #guid (or the selected if no guid is provided)');
REPLACE INTO `command` VALUES ('npc delitem', '2', 'Syntax: .npc delitem #itemId\r\n\r\nRemove item #itemid from item list of selected vendor.');
REPLACE INTO `command` VALUES ('npc factionid', '2', 'Syntax: .npc factionid #factionid\r\n\r\nSet the faction of the selected creature to #factionid.');
REPLACE INTO `command` VALUES ('npc flag', '2', 'Syntax: .npc flag #npcflag\r\n\r\nSet the NPC flags of creature template of the selected creature and selected creature to #npcflag. NPC flags will applied to all creatures of selected creature template after server restart or grid unload/load.');
REPLACE INTO `command` VALUES ('npc follow', '2', 'Syntax: .npc follow\r\n\r\nSelected creature start follow you until death/fight/etc.');
REPLACE INTO `command` VALUES ('npc info', '3', 'Syntax: .npc info\r\n\r\nDisplay a list of details for the selected creature.\r\n\r\nThe list includes:\r\n- GUID, Faction, NPC flags, Entry ID, Model ID,\r\n- Level,\r\n- Health (current/maximum),\r\n\r\n- Field flags, dynamic flags, faction template, \r\n- Position information,\r\n- and the creature type, e.g. if the creature is a vendor.');
REPLACE INTO `command` VALUES ('npc move', '2', 'Syntax: .npc move [#creature_guid]\r\n\r\nMove the targeted creature spawn point to your coordinates.');
REPLACE INTO `command` VALUES ('npc playemote', '3', 'Syntax: .npc playemote #emoteid\r\n\r\nMake the selected creature emote with an emote of id #emoteid.');
REPLACE INTO `command` VALUES ('npc say', '2', 'Syntax: .npc say $message\nMake selected creature say specified message.');
REPLACE INTO `command` VALUES ('npc setdeathstate', '2', 'Syntax: .npc setdeathstate on/off\r\n\r\nSet default death state (dead/alive) for npc at spawn.');
REPLACE INTO `command` VALUES ('npc setlink', '2', 'Syntax: .npc setlink $creatureGUID\r\n\r\nLinks respawn of selected creature to the condition that $creatureGUID defined is alive.');
REPLACE INTO `command` VALUES ('npc setmodel', '2', 'Syntax: .npc setmodel #displayid\r\n\r\nChange the model id of the selected creature to #displayid.');
REPLACE INTO `command` VALUES ('npc setmovetype', '2', 'Syntax: .npc setmovetype [#creature_guid] stay/random/way [NODEL]\r\n\r\nSet for creature pointed by #creature_guid (or selected if #creature_guid not provided) movement type and move it to respawn position (if creature alive). Any existing waypoints for creature will be removed from the database if you do not use NODEL. If the creature is dead then movement type will applied at creature respawn.\r\nMake sure you use NODEL, if you want to keep the waypoints.');
REPLACE INTO `command` VALUES ('npc setphase', '2', 'Syntax: .npc setphase #phasemask\r\n\r\nSelected unit or pet phasemask changed to #phasemask with related world vision update for players. In creature case state saved to DB and persistent. In pet case change active until in game phase changed for owner, owner re-login, or GM-mode enable/disable..');
REPLACE INTO `command` VALUES ('npc spawndist', '2', 'Syntax: .npc spawndist #dist\r\n\r\nAdjust spawndistance of selected creature to dist.');
REPLACE INTO `command` VALUES ('npc spawntime', '2', 'Syntax: .npc spawntime #time \r\n\r\nAdjust spawntime of selected creature to time.');
REPLACE INTO `command` VALUES ('npc tempadd', '2', 'Adds temporary NPC, not saved to database.');
REPLACE INTO `command` VALUES ('npc textemote', '2', 'Syntax: .npc textemote #emoteid\r\n\r\nMake the selected creature to do textemote with an emote of id #emoteid.');
REPLACE INTO `command` VALUES ('npc unfollow', '2', 'Syntax: .npc unfollow\r\n\r\nSelected creature (non pet) stop follow you.');
REPLACE INTO `command` VALUES ('npc whisper', '2', 'Syntax: .npc whisper #playerguid #text\r\nMake the selected npc whisper #text to  #playerguid.');
REPLACE INTO `command` VALUES ('npc yell', '2', 'Syntax: .npc yell $message\nMake selected creature yell specified message.');
REPLACE INTO `command` VALUES ('npc', '2', 'Syntax: .npc $subcommand\nType .npc to see the list of possible subcommands or .help npc $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('pdump load', '3', 'Syntax: .pdump load $filename $account [$newname] [$newguid]\r\nLoad character dump from dump file into character list of $account with saved or $newname, with saved (or first free) or $newguid guid.');
REPLACE INTO `command` VALUES ('pdump write', '3', 'Syntax: .pdump write $filename $playerNameOrGUID\r\nWrite character dump with name/guid $playerNameOrGUID to file $filename.');
REPLACE INTO `command` VALUES ('pdump', '3', 'Syntax: .pdump $subcommand\nType .pdump to see the list of possible subcommands or .help pdump $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('pet create', '2', 'Syntax: .pet create\r\n\r\nCreates a pet of the selected creature.');
REPLACE INTO `command` VALUES ('pet learn', '2', 'Syntax: .pet learn\r\n\r\nLearn #spellid to pet.');
REPLACE INTO `command` VALUES ('pet tp', '2', 'Syntax: .pet tp #\r\n\r\nChange pet\'s amount of training points.');
REPLACE INTO `command` VALUES ('pet unlearn', '2', 'Syntax: .pet unlean\r\n\r\nunLearn #spellid to pet.');
REPLACE INTO `command` VALUES ('pet', '2', 'Syntax: .pet $subcommand\nType .pet to see the list of possible subcommands or .help pet $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('pinfo', '1', 'Syntax: .pinfo [$player_name]\r\n\r\nOutput account information for selected player or player find by $player_name.');
REPLACE INTO `command` VALUES ('playall', '2', 'Syntax: .playall #soundid\r\n\r\nPlayer a sound to whole server.');
REPLACE INTO `command` VALUES ('possess', '3', 'Syntax: .possess\r\n\r\nPossesses indefinitely the selected creature.');
REPLACE INTO `command` VALUES ('quest add', '3', 'Syntax: .quest add #quest_id\r\n\r\nAdd to character quest log quest #quest_id. Quest started from item can\'t be added by this command but correct .additem call provided in command output.');
REPLACE INTO `command` VALUES ('quest complete', '3', 'Syntax: .quest complete #questid\r\nMark all quest objectives as completed for target character active quest. After this target character can go and get quest reward.');
REPLACE INTO `command` VALUES ('quest remove', '3', 'Syntax: .quest remove #quest_id\r\n\r\nSet quest #quest_id state to not completed and not active (and remove from active quest list) for selected player.');
REPLACE INTO `command` VALUES ('quest', '3', 'Syntax: .quest $subcommand\nType .quest to see the list of possible subcommands or .help quest $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('recall', '2', 'Syntax: .recall [$playername]\r\n\r\nTeleport $playername or selected player to the place where he has been before last use of a teleportation command. If no $playername is entered and no player is selected, it will teleport you.');
REPLACE INTO `command` VALUES ('reload all', '3', 'Syntax: .reload all\r\n\r\nReload all tables with reload support added and that can be _safe_ reloaded.');
REPLACE INTO `command` VALUES ('reload all_item', '3', 'Syntax: .reload all_item\nReload page_text, item_enchantment_table tables.');
REPLACE INTO `command` VALUES ('reload all_locales', '3', 'Syntax: .reload all_locales\r\n\r\nReload all `locales_*` tables with reload support added and that can be _safe_ reloaded.');
REPLACE INTO `command` VALUES ('reload all_loot', '3', 'Syntax: .reload all_loot\r\n\r\nReload all `*_loot_template` tables. This can be slow operation with lags for server run.');
REPLACE INTO `command` VALUES ('reload all_npc', '3', 'Syntax: .reload all_npc\nReload npc_gossip, npc_option, npc_trainer, npc vendor, points of interest tables.');
REPLACE INTO `command` VALUES ('reload all_quest', '3', 'Syntax: .reload all_quest\r\n\r\nReload all quest related tables if reload support added for this table and this table can be _safe_ reloaded.');
REPLACE INTO `command` VALUES ('reload all_scripts', '3', 'Syntax: .reload all_scripts\nReload gameobject_scripts, event_scripts, quest_end_scripts, quest_start_scripts, spell_scripts, db_script_string, waypoint_scripts tables.');
REPLACE INTO `command` VALUES ('reload all_spell', '3', 'Syntax: .reload all\r\n\r\nReload all `spell_*` tables with reload support added and that can be _safe_ reloaded.');
REPLACE INTO `command` VALUES ('reload areatrigger_involvedrelation', '3', 'Syntax: .reload areatrigger_involvedrelation\nReload areatrigger_involvedrelation table.');
REPLACE INTO `command` VALUES ('reload areatrigger_tavern', '3', 'Syntax: .reload areatrigger_tavern\nReload areatrigger_tavern table.');
REPLACE INTO `command` VALUES ('reload areatrigger_teleport', '3', 'Syntax: .reload areatrigger_teleport\nReload areatrigger_teleport table.');
REPLACE INTO `command` VALUES ('reload autobroadcast', '3', 'Syntax: .reload autobroadcast\nReload autobroadcast table.');
REPLACE INTO `command` VALUES ('reload command', '3', 'Syntax: .reload command\nReload command table.');
REPLACE INTO `command` VALUES ('reload config', '3', 'Syntax: .reload config\r\n\r\nReload config settings (by default stored in trinityd.conf). Not all settings can be change at reload: some new setting values will be ignored until restart, some values will applied with delay or only to new objects/maps, some values will explicitly rejected to change at reload.');
REPLACE INTO `command` VALUES ('reload creature_involvedrelation', '3', 'Syntax: .reload creature_involvedrelation\nReload creature_involvedrelation table.');
REPLACE INTO `command` VALUES ('reload creature_linked_respawn', '2', 'Syntax: .reload creature_linked_respawn\r\nReload creature_linked_respawn table.');
REPLACE INTO `command` VALUES ('reload creature_loot_template', '3', 'Syntax: .reload creature_loot_template\nReload creature_loot_template table.');
REPLACE INTO `command` VALUES ('reload creature_questrelation', '3', 'Syntax: .reload creature_questrelation\nReload creature_questrelation table.');
REPLACE INTO `command` VALUES ('reload disenchant_loot_template', '3', 'Syntax: .reload disenchant_loot_template\nReload disenchant_loot_template table.');
REPLACE INTO `command` VALUES ('reload event_scripts', '3', 'Syntax: .reload event_scripts\nReload event_scripts table.');
REPLACE INTO `command` VALUES ('reload fishing_loot_template', '3', 'Syntax: .reload fishing_loot_template\nReload fishing_loot_template table.');
REPLACE INTO `command` VALUES ('reload game_graveyard_zone', '3', 'Syntax: .reload game_graveyard_zone\nReload game_graveyard_zone table.');
REPLACE INTO `command` VALUES ('reload game_tele', '3', 'Syntax: .reload game_tele\nReload game_tele table.');
REPLACE INTO `command` VALUES ('reload gameobject_involvedrelation', '3', 'Syntax: .reload gameobject_involvedrelation\nReload gameobject_involvedrelation table.');
REPLACE INTO `command` VALUES ('reload gameobject_loot_template', '3', 'Syntax: .reload gameobject_loot_template\nReload gameobject_loot_template table.');
REPLACE INTO `command` VALUES ('reload gameobject_questrelation', '3', 'Syntax: .reload gameobject_questrelation\nReload gameobject_questrelation table.');
REPLACE INTO `command` VALUES ('reload gameobject_scripts', '3', 'Syntax: .reload gameobject_scripts\nReload gameobject_scripts table.');
REPLACE INTO `command` VALUES ('reload gm_tickets', '3', 'Syntax: .reload gm_tickets\nReload gm_tickets table.');
REPLACE INTO `command` VALUES ('reload item_enchantment_template', '3', 'Syntax: .reload item_enchantment_template\nReload item_enchantment_template table.');
REPLACE INTO `command` VALUES ('reload item_loot_template', '3', 'Syntax: .reload item_loot_template\nReload item_loot_template table.');
REPLACE INTO `command` VALUES ('reload locales_creature', '3', 'Syntax: .reload locales_creature\nReload locales_creature table.');
REPLACE INTO `command` VALUES ('reload locales_gameobject', '3', 'Syntax: .reload locales_gameobject\nReload locales_gameobject table.');
REPLACE INTO `command` VALUES ('reload locales_item', '3', 'Syntax: .reload locales_item\nReload locales_item table.');
REPLACE INTO `command` VALUES ('reload locales_npc_text', '3', 'Syntax: .reload locales_npc_text\nReload locales_npc_text table.');
REPLACE INTO `command` VALUES ('reload locales_page_text', '3', 'Syntax: .reload locales_page_text\nReload locales_page_text table.');
REPLACE INTO `command` VALUES ('reload locales_points_of_interest', '3', 'Syntax: .reload locales_points_of_interest\nReload locales_point_of_interest table.');
REPLACE INTO `command` VALUES ('reload locales_quest', '3', 'Syntax: .reload locales_quest\nReload locales_quest table.');
REPLACE INTO `command` VALUES ('reload milling_loot_template', '3', 'Syntax: .reload milling_loot_template\nReload milling_loot_template table.');
REPLACE INTO `command` VALUES ('reload npc_gossip', '3', 'Syntax: .reload npc_gossip\nReload npc_gossip table.');
REPLACE INTO `command` VALUES ('reload npc_trainer', '3', 'Syntax: .reload npc_trainer\nReload npc_trainer table.');
REPLACE INTO `command` VALUES ('reload npc_vendor', '3', 'Syntax: .reload npc_vendor\nReload npc_vendor table.');
REPLACE INTO `command` VALUES ('reload page_text', '3', 'Syntax: .reload page_text\nReload page_text table.');
REPLACE INTO `command` VALUES ('reload pickpocketing_loot_template', '3', 'Syntax: .reload pickpocketing_loot_template\nReload pickpocketing_loot_template table.');
REPLACE INTO `command` VALUES ('reload points_of_interest', '3', 'Syntax: .reload points_of_interest\nReload points_of_interest table.');
REPLACE INTO `command` VALUES ('reload prospecting_loot_template', '3', 'Syntax: .reload prospecting_loot_template\nReload prospecting_loot_template table.');
REPLACE INTO `command` VALUES ('reload quest_end_scripts', '3', 'Syntax: .reload quest_end_scripts\nReload quest_end_scripts table.');
REPLACE INTO `command` VALUES ('reload mail_loot_template', '3', 'Syntax: .reload quest_mail_loot_template\nReload quest_mail_loot_template table.');
REPLACE INTO `command` VALUES ('reload quest_start_scripts', '3', 'Syntax: .reload quest_start_scripts\nReload quest_start_scripts table.');
REPLACE INTO `command` VALUES ('reload quest_template', '3', 'Syntax: .reload quest_template\nReload quest_template table.');
REPLACE INTO `command` VALUES ('reload reference_loot_template', '3', 'Syntax: .reload reference_loot_template\nReload reference_loot_template table.');
REPLACE INTO `command` VALUES ('reload reserved_name', '3', 'Syntax: .reload reserved_name\nReload reserved_name table.');
REPLACE INTO `command` VALUES ('reload skill_discovery_template', '3', 'Syntax: .reload skill_discovery_template\nReload skill_discovery_template table.');
REPLACE INTO `command` VALUES ('reload skill_extra_item_template', '3', 'Syntax: .reload skill_extra_item_template\nReload skill_extra_item_template table.');
REPLACE INTO `command` VALUES ('reload skill_fishing_base_level', '3', 'Syntax: .reload skill_fishing_base_level\nReload skill_fishing_base_level table.');
REPLACE INTO `command` VALUES ('reload skinning_loot_template', '3', 'Syntax: .reload skinning_loot_template\nReload skinning_loot_template table.');
REPLACE INTO `command` VALUES ('reload spell_area', '3', 'Syntax: .reload spell_area\nReload spell_area table.');
REPLACE INTO `command` VALUES ('reload spell_bonus_data', '3', 'Syntax: .reload spell_bonus_data\nReload spell_bonus_data table.');
REPLACE INTO `command` VALUES ('reload spell_disabled', '3', 'Syntax: .reload spell_disabled\nReload spell_disabled table.');
REPLACE INTO `command` VALUES ('reload spell_group_stack_rules', '3', 'Syntax: .reload spell_group\nReload spell_group_stack_rules table.');
REPLACE INTO `command` VALUES ('reload spell_learn_spell', '3', 'Syntax: .reload spell_learn_spell\nReload spell_learn_spell table.');
REPLACE INTO `command` VALUES ('reload spell_linked_spell', '3', 'Usage: .reload spell_linked_spell\r\nReloads the spell_linked_spell DB table.');
REPLACE INTO `command` VALUES ('reload spell_loot_template', '3', 'Syntax: .reload spell_loot_template\nReload spell_loot_template table.');
REPLACE INTO `command` VALUES ('reload spell_pet_auras', '3', 'Syntax: .reload spell_pet_auras\nReload spell_pet_auras table.');
REPLACE INTO `command` VALUES ('reload spell_proc_event', '3', 'Syntax: .reload spell_proc_event\nReload spell_proc_event table.');
REPLACE INTO `command` VALUES ('reload spell_required', '3', 'Syntax: .reload spell_required\nReload spell_required table.');
REPLACE INTO `command` VALUES ('reload spell_script_target', '3', 'Syntax: .reload spell_script_target\nReload spell_script_target table.');
REPLACE INTO `command` VALUES ('reload spell_scripts', '3', 'Syntax: .reload spell_scripts\nReload spell_scripts table.');
REPLACE INTO `command` VALUES ('reload spell_target_position', '3', 'Syntax: .reload spell_target_position\nReload spell_target_position table.');
REPLACE INTO `command` VALUES ('reload spell_threats', '3', 'Syntax: .reload spell_threats\nReload spell_threats table.');
REPLACE INTO `command` VALUES ('reload trinity_string', '3', 'Syntax: .reload trinity_string\nReload trinity_string table.');
REPLACE INTO `command` VALUES ('reload waypoint_scripts', '3', 'Syntax: .reload waypoint_scripts\nReload waypoint_scripts table.');
REPLACE INTO `command` VALUES ('reload', '3', 'Syntax: .reload $subcommand\nType .reload to see the list of possible subcommands or .help reload $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('repairitems', '2', 'Syntax: .repairitems\r\n\r\nRepair all selected player\'s items.');
REPLACE INTO `command` VALUES ('reset achievements', '3', 'Syntax: .reset achievements [$playername]\r\n\r\nReset achievements data for selected or named (online or offline) character. Achievements for persistance progress data like completed quests/etc re-filled at reset. Achievements for events like kills/casts/etc will lost.');
REPLACE INTO `command` VALUES ('reset all', '3', 'Syntax: .reset all spells\r\n\r\nSyntax: .reset all talents\r\n\r\nRequest reset spells or talents (including talents for all character\'s pets if any) at next login each existed character.');
REPLACE INTO `command` VALUES ('reset honor', '3', 'Syntax: .reset honor [Playername]\r\n  Reset all honor data for targeted character.');
REPLACE INTO `command` VALUES ('reset level', '3', 'Syntax: .reset level [Playername]\r\n  Reset level to 1 including reset stats and talents.  Equipped items with greater level requirement can be lost.');
REPLACE INTO `command` VALUES ('reset spells', '3', 'Syntax: .reset spells [Playername]\r\n  Removes all non-original spells from spellbook.\r\n. Playername can be name of offline character.');
REPLACE INTO `command` VALUES ('reset stats', '3', 'Syntax: .reset stats [Playername]\r\n  Resets(recalculate) all stats of the targeted player to their original VALUESat current level.');
REPLACE INTO `command` VALUES ('reset talents', '3', 'Syntax: .reset talents [Playername]\r\n  Removes all talents of the targeted player or pet or named player. Playername can be name of offline character. With player talents also will be reset talents for all character\'s pets if any.');
REPLACE INTO `command` VALUES ('reset', '3', 'Syntax: .reset $subcommand\nType .reset to see the list of possible subcommands or .help reset $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('respawn', '3', 'Syntax: .respawn\r\n\r\nRespawn all nearest creatures and GO without waiting respawn time expiration.');
REPLACE INTO `command` VALUES ('revive', '3', 'Syntax: .revive\r\n\r\nRevive the selected player. If no player is selected, it will revive you.');
REPLACE INTO `command` VALUES ('save', '3', 'Syntax: .save\r\n\r\nSaves your character.');
REPLACE INTO `command` VALUES ('saveall', '2', 'Syntax: .saveall\r\n\r\nSave all characters in game.');
REPLACE INTO `command` VALUES ('send items', '3', 'Syntax: .send items #playername \"#subject\" \"#text\" itemid1[:count1] itemid2[:count2] ... itemidN[:countN]\r\n\r\nSend a mail to a player. Subject and mail text must be in \"\". If for itemid not provided related count values then expected 1, if count > max items in stack then items will be send in required amount stacks. All stacks amount in mail limited to 12.');
REPLACE INTO `command` VALUES ('send mail', '2', 'Syntax: .send mail #playername \"#subject\" \"#text\"\r\n\r\nSend a mail to a player. Subject and mail text must be in \"\".');
REPLACE INTO `command` VALUES ('send message', '3', 'Syntax: .send message $playername $message\r\n\r\nSend screen message to player from ADMINISTRATOR.');
REPLACE INTO `command` VALUES ('send money', '3', 'Syntax: .send money #playername \"#subject\" \"#text\" #money\r\n\r\nSend mail with money to a player. Subject and mail text must be in \"\".');
REPLACE INTO `command` VALUES ('server corpses', '4', 'Syntax: .server corpses\r\n\r\nTriggering corpses expire check in world.');
REPLACE INTO `command` VALUES ('server exit', '4', 'Syntax: .server exit\r\n\r\nTerminate trinity-core NOW. Exit code 0.');
REPLACE INTO `command` VALUES ('server idlerestart cancel', '4', 'Syntax: .server idlerestart cancel\r\n\r\nCancel the restart/shutdown timer if any.');
REPLACE INTO `command` VALUES ('server idlerestart', '4', 'Syntax: .server idlerestart #delay\r\n\r\nRestart the server after #delay seconds if no active connections are present (no players). Use #exist_code or 2 as program exist code.');
REPLACE INTO `command` VALUES ('server idleshutdown cancel', '4', 'Syntax: .server idleshutdown cancel\r\n\r\nCancel the restart/shutdown timer if any.');
REPLACE INTO `command` VALUES ('server idleshutdown', '4', 'Syntax: .server idleshutdown #delay [#exist_code]\r\n\r\nShut the server down after #delay seconds if no active connections are present (no players). Use #exist_code or 0 as program exist code.');
REPLACE INTO `command` VALUES ('server info', '0', 'Syntax: .server info\r\n\r\nDisplay server version and the number of connected players.');
REPLACE INTO `command` VALUES ('server motd', '4', 'Syntax: .server motd\r\n\r\nShow server Message of the day.');
REPLACE INTO `command` VALUES ('server plimit', '4', 'Syntax: .server plimit [#num|-1|-2|-3|reset|player|moderator|gamemaster|administrator]\r\n\r\nWithout arg show current player amount and security level limitations for login to server, with arg set player linit ($num > 0) or securiti limitation ($num < 0 or security leme name. With `reset` sets player limit to the one in the config file');
REPLACE INTO `command` VALUES ('server restart cancel', '4', 'Syntax: .server restart cancel\r\n\r\nCancel the restart/shutdown timer if any.');
REPLACE INTO `command` VALUES ('server restart', '4', 'Syntax: .server restart #delay\r\n\r\nRestart the server after #delay seconds. Use #exist_code or 2 as program exist code.');
REPLACE INTO `command` VALUES ('server set closed', '4', 'Syntax: server set closed on/off\r\n\r\nSets whether the world accepts new client connectsions.');
REPLACE INTO `command` VALUES ('server set loglevel', '4', 'Syntax: .server set loglevel #level\r\n\r\nSet server log level (0 - errors only, 1 - basic, 2 - detail, 3 - debug).');
REPLACE INTO `command` VALUES ('server set motd', '4', 'Syntax: .server set motd $MOTD\r\n\r\nSet server Message of the day.');
REPLACE INTO `command` VALUES ('server shutdown cancel', '4', 'Syntax: .server shutdown cancel\r\n\r\nCancel the restart/shutdown timer if any.');
REPLACE INTO `command` VALUES ('server shutdown', '4', 'Syntax: .server shutdown #delay [#exit_code]\r\n\r\nShut the server down after #delay seconds. Use #exit_code or 0 as program exit code.');
REPLACE INTO `command` VALUES ('server', '4', 'Syntax: .server $subcommand\nType .server to see the list of possible subcommands or .help server $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('setskill', '3', 'Syntax: .setskill #skill #level [#max]\r\n\r\nSet a skill of id #skill with a current skill value of #level and a maximum value of #max (or equal current maximum if not provide) for the selected character. If no character is selected, you learn the skill.');
REPLACE INTO `command` VALUES ('showarea', '3', 'Syntax: .showarea #areaid\r\n\r\nReveal the area of #areaid to the selected character. If no character is selected, reveal this area to you.');
REPLACE INTO `command` VALUES ('start', '0', 'Syntax: .start\r\n\r\nTeleport you to the starting area of your character.');
REPLACE INTO `command` VALUES ('taxicheat', '2', 'Syntax: .taxicheat on/off\r\n\r\nTemporary grant access or remove to all taxi routes for the selected character. If no character is selected, hide or reveal all routes to you.\r\n\r\nVisited taxi nodes sill accessible after removing access.');
REPLACE INTO `command` VALUES ('tele add', '3', 'Syntax: .tele add $name\r\n\r\nAdd current your position to .tele command target locations list with name $name.');
REPLACE INTO `command` VALUES ('tele del', '3', 'Syntax: .tele del $name\r\n\r\nRemove location with name $name for .tele command locations list.');
REPLACE INTO `command` VALUES ('tele group', '2', 'Syntax: .tele group#location\r\n\r\nTeleport a selected player and his group members to a given location.');
REPLACE INTO `command` VALUES ('tele name', '2', 'Syntax: .tele name [#playername] #location\r\n\r\nTeleport the given character to a given location. Character can be offline.');
REPLACE INTO `command` VALUES ('tele', '2', 'Syntax: .tele #location\r\n\r\nTeleport player to a given location.');
REPLACE INTO `command` VALUES ('ticket assign', '2', 'Usage: .ticket assign $ticketid $gmname.\r\nAssigns the specified ticket to the specified Game Master.');
REPLACE INTO `command` VALUES ('ticket close', '2', 'Usage: .ticket close $ticketid.\r\nCloses the specified ticket. Does not delete permanently.');
REPLACE INTO `command` VALUES ('ticket closedlist', '2', 'Displays a list of closed GM tickets.');
REPLACE INTO `command` VALUES ('ticket comment', '2', 'Usage: .ticket comment $ticketid $comment.\r\nAllows the adding or modifying of a comment to the specified ticket.');
REPLACE INTO `command` VALUES ('ticket delete', '3', 'Usage: .ticket delete $ticketid.\r\nDeletes the specified ticket permanently. Ticket must be closed first.');
REPLACE INTO `command` VALUES ('ticket list', '2', 'Displays a list of open GM tickets.');
REPLACE INTO `command` VALUES ('ticket onlinelist', '2', 'Displays a list of open GM tickets whose owner is online.');
REPLACE INTO `command` VALUES ('ticket unassign', '2', 'Usage: .ticket unassign $ticketid.\r\nUnassigns the specified ticket from the current assigned Game Master.');
REPLACE INTO `command` VALUES ('ticket viewid', '2', 'Usage: .ticket viewid $ticketid.\r\nReturns details about specified ticket. Ticket must be open and not deleted.');
REPLACE INTO `command` VALUES ('ticket viewname', '2', 'Usage: .ticket viewname $creatorname. \r\nReturns details about specified ticket. Ticket must be open and not deleted.');
REPLACE INTO `command` VALUES ('ticket', '2', 'Syntax: .ticket $subcommand\nType .ticket to see the list of possible subcommands or .help ticket $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('unaura', '3', 'Syntax: .unaura #spellid\r\n\r\nRemove aura due to spell #spellid from the selected Unit.');
REPLACE INTO `command` VALUES ('unban account', '2', 'Syntax: .unban account $Name\r\nUnban accounts for account name pattern.');
REPLACE INTO `command` VALUES ('unban character', '2', 'Syntax: .unban character $Name\r\nUnban accounts for character name pattern.');
REPLACE INTO `command` VALUES ('unban ip', '2', 'Syntax : .unban ip $Ip\r\nUnban accounts for IP pattern.');
REPLACE INTO `command` VALUES ('unban', '2', 'Syntax: .unban $subcommand\nType .unban to see the list of possible subcommands or .help unban $subcommand to see info on subcommands');
REPLACE INTO `command` VALUES ('unbindsight', '3', 'Syntax: .unbindsight\r\n\r\nRemoves bound vision. Cannot be used while currently possessing a target.');
REPLACE INTO `command` VALUES ('unfreeze', '1', 'Syntax: .unfreeze (#player)\r\n\"Unfreezes\" #player and enables his chat again. When using this without #name it will unfreeze your target.');
REPLACE INTO `command` VALUES ('unlearn', '3', 'Syntax: .unlearn #spell [all]\r\n\r\nUnlearn for selected player a spell #spell.  If \'all\' provided then all ranks unlearned.');
REPLACE INTO `command` VALUES ('unmute', '1', 'Syntax: .unmute [$playerName]\r\n\r\nRestore chat messaging for any character from account of character $playerName (or selected). Character can be ofline.');
REPLACE INTO `command` VALUES ('unpossess', '3', 'Syntax: .unpossess\r\n\r\nIf you are possessed, unpossesses yourself; otherwise unpossesses current possessed target.');
REPLACE INTO `command` VALUES ('waterwalk', '2', 'Syntax: .waterwalk on/off\r\n\r\nSet on/off waterwalk state for selected player or self if no player selected.');
REPLACE INTO `command` VALUES ('wchange', '3', 'Syntax: .wchange #weathertype #status\r\n\r\nSet current weather to #weathertype with an intensity of #status.\r\n\r\n#weathertype can be 1 for rain, 2 for snow, and 3 for sand. #status can be 0 for disabled, and 1 for enabled.');
REPLACE INTO `command` VALUES ('whispers', '2', 'Syntax: .whispers on|off\r\nEnable/disable accepting whispers by GM from players. By default use trinityd.conf setting.');
REPLACE INTO `command` VALUES ('wp event', '2', 'Syntax: .wp event $subcommand\nType .path event to see the list of possible subcommands or .help path event $subcommand to see info on subcommands.');
REPLACE INTO `command` VALUES ('wp load', '2', 'Syntax: .wp load $pathid\nLoad pathid number for selected creature. Creature must have no waypoint data.');
REPLACE INTO `command` VALUES ('wp show', '2', 'Syntax: .wp show $option\nOptions:\non $pathid (or selected creature with loaded path) - Show path\noff - Hide path\ninfo $slected_waypoint - Show info for selected waypoint.');
REPLACE INTO `command` VALUES ('wp unload', '2', 'Syntax: .wp unload\nUnload path for selected creature.');
REPLACE INTO `command` VALUES ('account addon', '1', 'Syntax: .account addon #addon\nSet expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk.');
REPLACE INTO `command` VALUES ('titles remove', '2', 'Syntax: .titles remove #title\r\nRemove title #title (id or shift-link) from known titles list for selected player.');
REPLACE INTO `command` VALUES ('titles current', '2', 'Syntax: .titles current #title\r\nSet title #title (id or shift-link) as current selected titl for selected player. If title not in known title list for player then it will be added to list.');
REPLACE INTO `command` VALUES ('titles add', '2', 'Syntax: .titles add #title\r\nAdd title #title (id or shift-link) to known titles list for selected player.');
REPLACE INTO `command` VALUES ('titles setmask', '2', 'Syntax: .titles setmask #mask\r\n\r\nAllows user to use all titles from #mask.\r\n\r\n #mask=0 disables the title-choose-field');
REPLACE INTO `command` VALUES ('lookup title', '2', 'Syntax: .lookup title $$namepart\r\n\r\nLooks up a title by $namepart, and returns all matches with their title ID\'s and index\'s.');
REPLACE INTO `command` VALUES ('gobject info', '2', 'Syntax: .gobject info [$object_entry]\r\n\r\nQuery Gameobject information for selected gameobject or given entry.');
